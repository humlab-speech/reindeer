% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reindeeR_metadata.R
\name{add_digests}
\alias{add_digests}
\title{Add identifying information based on the content of the wave file to the metadata information for the bundle.}
\usage{
add_digests(
  emuDBhandle,
  sessionPattern = ".*",
  bundlePattern = ".*",
  algorithm = "sha1"
)
}
\arguments{
\item{emuDBhandle}{The handle for the emuR database.}

\item{sessionPattern}{A regexp pattern that allows the user to limit which sessions should be affected by the manipulation.}

\item{bundlePattern}{A regexp pattern that allows the user to limit which bundles to include.}

\item{algorithm}{The name of the hashing algorithm, according to the \code{\link[digest]{digest}} function.}
}
\description{
This function will extract information (lenght of recording and a checksum) from the wav file associated with a bundle, and add it to the set of metadata
for the bundle. This information can later be used to verify that the file has not been altered later on, or to deidentify
wav files in a reversable manner for use outside of the emuR framework. Deidentified files are sometimes useful for blinded randomized
perceptual testing, and the ability to reverse the procedure is then essential to link the results of the evaluation back to the original
recording extracted from the emuR data base. The user may create checksums by multiple algorithms by running the function again with different \code{algorithm} arguments.
}
\examples{
\dontrun{
create_emuRdemoData()
ae_test <- load_emuDB(file.path(tempdir(),"emuR_demoData","ae_emuDB"))

#Add a md5 digest to the metadata of all bundles
add_digests(ae_test,algorithm = "md5")

#Add a "sha1" checksum (the default) to some bundles
add_digests(ae_test,bundlePattern = "msajc0.*")
get_metadata(ae_test) -> res
print(res)
}

}
